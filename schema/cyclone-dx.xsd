<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="bom"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           targetNamespace="https://raw.githubusercontent.com/CycloneDX/specification/master/schema/cyclone-dx.xsd"
           xmlns:bom="https://raw.githubusercontent.com/CycloneDX/specification/master/schema/cyclone-dx.xsd"
           xmlns:spdx="https://raw.githubusercontent.com/CycloneDX/specification/master/schema/spdx-licenses.xsd">
    
    <xs:import namespace="https://raw.githubusercontent.com/CycloneDX/specification/master/schema/spdx-licenses.xsd" 
        schemaLocation="https://raw.githubusercontent.com/CycloneDX/specification/master/schema/spdx-licenses.xsd"/>

    <xs:complexType name="component">
        <xs:sequence>
            <xs:element name="publisher" type="xs:normalizedString" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The person(s) or organization(s) that published the component</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="group" type="xs:normalizedString" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The grouping name or identifier. This will often be a shortened, single 
                        name of the company or project that produced the component, or the source package or 
                        domain name. Whitespace and special characters should be avoided. Examples include:
                        apache, org.apache.commons, and apache.org.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="name" type="xs:normalizedString" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The name of the component. This will often be a shortened, single name
                        of the component. Examples: commons-lang3 and jquery</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="version" type="bom:semver" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The component version. The version should comply to the semantic versioning
                    specification.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="scope" type="bom:scope" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Specifies the scope of the component. If scope is not specified, 'runtime'
                    scope will be assumed.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="hashes">
                <xs:complexType>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="hash" type="bom:hashType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="description" type="xs:normalizedString" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Specifies a description for the component</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="license" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:choice>
                            <xs:element name="id" type="spdx:spdxLicenseId" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>A valid SPDX license ID</xs:documentation>
                                </xs:annotation>    
                            </xs:element>
                            <xs:element name="other" type="xs:normalizedString" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>If SPDX does not define the license used, this field may be used to provide the license name</xs:documentation>
                                </xs:annotation>
                            </xs:element>   
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="cpe" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="modified" type="xs:boolean" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        A boolean value indicating is the component has been modified from the original. 
                        A value of true indicates the component is a derivative of the original.
                        A value of false indicates the component has not been modified from the original.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="components" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        Specifies optional sub-components. This is not a dependency tree. It simply provides 
                        an optional way to group large sets of components together.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="component" type="bom:component"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="bom:classification" use="required">
            <xs:annotation>
                <xs:documentation>
                    Specifies the type of component. Software applications, libraries, frameworks, and 
                    other dependencies should be classified as 'application'.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
           
    <xs:complexType name="hashType">
        <xs:annotation>
            <xs:documentation>Specifies the file hash of the component</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="alg" type="bom:hashAlg" use="required">
                    <xs:annotation>
                        <xs:documentation>Specifies the algorithm used to create hash</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
        
    <xs:simpleType name="scope">
        <xs:restriction base="xs:string">
            <xs:enumeration value="required">
                <xs:annotation>
                    <xs:documentation>The component is required for runtime</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="optional">
                <xs:annotation>
                    <xs:documentation>The component is optional at runtime. Optional components are components that
                    are not capable of being called due to them not be installed or otherwise accessible by any means.
                    Components that are installed but due to configuration or other restrictions are prohibited from
                    being called must be scoped as 'required'.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="classification">
        <xs:restriction base="xs:string">
            <xs:enumeration value="application"/>
            <xs:enumeration value="operating-system"/>
            <xs:enumeration value="device"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="hashAlg">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MD5"/>
            <xs:enumeration value="SHA-1"/>
            <xs:enumeration value="SHA-256"/>
            <xs:enumeration value="SHA-512"/>
            <xs:enumeration value="SHA3-256"/>
            <xs:enumeration value="SHA3-512"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="semver">
        <xs:restriction base="xs:token">
            <xs:pattern value="(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="bom">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="components">
                    <xs:complexType>
                        <xs:sequence minOccurs="0" maxOccurs="unbounded">
                            <xs:element name="component" type="bom:component"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="version" type="xs:normalizedString" use="required"/>
        </xs:complexType>
    </xs:element>
</xs:schema>